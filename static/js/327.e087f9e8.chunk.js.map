{"version":3,"file":"static/js/327.e087f9e8.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"names":["Container","React","ref","bsPrefix","fluid","as","Component","className","props","prefix","useBootstrapPrefix","suffix","_jsx","classNames","displayName","propTypes","type","PropTypes","tooltip","Feedback","FormCheckInput","id","isValid","isInvalid","controlId","useContext","FormContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","some","child","hasChildOfType","input","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","classes","size","htmlSize","plaintext","readOnly","createWithBsPrefix","FormGroup","context","Col","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select"],"sourceRoot":""}